//if (ImGui::IsMouseDown (0)/* && ImGui::IsWindowHovered()*/) {

//    glm::vec3 ray_origin;
//    glm::vec3 ray_direction;

//    double x, y;
//    glfwGetCursorPos(StartEngineGraphics::window, &x, &y);

//    double xPos = x - imagePosition.x;
//    double yPos = y - imagePosition.y;



//    ScreenPosToWorldRay(
//        xPos, yPos,
//        imageSizeSCENE.x, imageSizeSCENE.y,
//        SceneManager::GetSceneManager()->OpenScene->worldCamera->GetView(),
//        SceneManager::GetSceneManager()->OpenScene->worldCamera->GetProjectionMatrix(),
//        ray_origin,
//        ray_direction
//    );

//    
//    for (Entity* objs : SceneManager::GetSceneManager()->OpenScene->objectsInScene) {
//        float intersection_distance; // Output of TestRayOBBIntersection()

//        glm::vec3 ObjectScale = glm::vec3
//        (
//            (objs->transform->Scale.x),
//            (objs->transform->Scale.y),
//            (objs->transform->Scale.z)
//        );

//        glm::vec3 aabb_min(-ObjectScale.x,
//                           -ObjectScale.y,
//                           -ObjectScale.z);


//        glm::vec3 aabb_max(ObjectScale.x,
//                           ObjectScale.y,
//                           ObjectScale.z);
//        
//        glm::mat4 RotationMatrix = glm::mat4_cast(glm::quat(1, 0, 0, 0));
//        glm::mat4 TranslationMatrix = glm::translate(glm::mat4(1.0f), glm::vec3(objs->transform->Position.x, objs->transform->Position.y, objs->transform->Position.z));
//        glm::mat4 ModelMatrix = objs->transform->GetMatrix()/*TranslationMatrix * RotationMatrix*/;


//        if (TestRayOBBIntersection(
//            ray_origin,
//            ray_direction,
//            aabb_min,
//            aabb_max,
//            ModelMatrix,
//            intersection_distance)
//            ) {
//            UIManager::instance->inspectorui->ObjectSelectToInspector = objs;
//            std::cout << "Object Found:  " << objs->ObjectName << " | DISTANCE: " << intersection_distance << std::endl;
//        }
//        else {
//            //UIManager::instance->inspectorui->ObjectSelectToInspector = nullptr;
//        }
//    }
//}